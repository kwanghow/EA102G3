<%@ page contentType="text/html; charset=UTF-8" pageEncoding="Big5"%>
<script>
let mediaRecorder;
let recordedBlobs;

const errorMsgElement = document.querySelector('span#errorMsg');
const recordedVideo = document.querySelector('video#recorded');
const recordButton = document.querySelector('button#record');
recordButton.addEventListener('click', () => {
  if (recordButton.textContent === '開始錄影') {
    startRecording();
  } else {
    stopRecording();
    recordButton.textContent = '開始錄影';
    setTimeout(function(){$('#upload').click(); }, 500);
//     downloadButton.disabled = false;
  }
});

// const downloadButton = document.querySelector('button#download');
// downloadButton.addEventListener('click', () => {
//   const blob = new Blob(recordedBlobs, {type: 'video/webm'});
//   const url = window.URL.createObjectURL(blob);
//   const a = document.createElement('a');
//   a.style.display = 'none';
//   a.href = url;
//   a.download = 'test.webm';
//   document.body.appendChild(a);
//   a.click();
//   setTimeout(() => {
//     document.body.removeChild(a);
//     window.URL.revokeObjectURL(url);
//   }, 100);
// });

function handleDataAvailable(event) {
//   console.log('handleDataAvailable', event);
  if (event.data && event.data.size > 0) {
    recordedBlobs.push(event.data);
  }
}

function startRecording() {
  recordedBlobs = [];
  let options = {mimeType: 'video/webm;codecs=vp9,opus'};
  if (!MediaRecorder.isTypeSupported(options.mimeType)) {
    console.error(`${options.mimeType} is not supported`);
    options = {mimeType: 'video/webm;codecs=vp8,opus'};
    if (!MediaRecorder.isTypeSupported(options.mimeType)) {
      console.error(`${options.mimeType} is not supported`);
      options = {mimeType: 'video/webm'};
      if (!MediaRecorder.isTypeSupported(options.mimeType)) {
        console.error(`${options.mimeType} is not supported`);
        options = {mimeType: ''};
      }
    }
  }

  try {
    mediaRecorder = new MediaRecorder(window.stream, options);
  } catch (e) {
    console.error('Exception while creating MediaRecorder:', e);
    errorMsgElement.innerHTML = `Exception while creating MediaRecorder: ${JSON.stringify(e)}`;
    return;
  }

//   console.log('Created MediaRecorder', mediaRecorder, 'with options', options);
  recordButton.textContent = '停止錄影';
//   downloadButton.disabled = true;
  mediaRecorder.onstop = (event) => {
//     console.log('錄影中斷: ', event);
//     console.log('錄影的 Blobs: ', recordedBlobs);
  };
  mediaRecorder.ondataavailable = handleDataAvailable;
  mediaRecorder.start();
//   console.log('MediaRecorder started', mediaRecorder);
}

function stopRecording() {
  mediaRecorder.stop();
}

function handleSuccess(stream) {
  recordButton.disabled = false;
//   console.log('getUserMedia() got stream:', stream);
  window.stream = stream;

//  const gumVideo = document.querySelector('video#gum');
//  gumVideo.srcObject = stream;
}

async function init(constraints) {
  try {
    const stream = await navigator.mediaDevices.getUserMedia(constraints);
    handleSuccess(stream);
  } catch (e) {
    console.error('navigator.getUserMedia error:', e);
    errorMsgElement.innerHTML = `navigator.getUserMedia error:${e.toString()}`;
  }
}

 document.querySelector('button#start').addEventListener('click', async () => {
//window.onload=async () => {
  const constraints =  {
		  audio: true,
		  video: {
		      width: 1280, height: 720
		    }
		};
//   console.log('Using media constraints:', constraints);
  await init(constraints);
});


$('#upload').click(function(){
	const superBuffer = new Blob(recordedBlobs, {type: 'video/webm'});
$.ajax({
    url:'<%=request.getContextPath()%>/front-end/stream/upload.do',
    type:'POST',
    data:superBuffer,
    cache : false, // 不需要cache
	processData : false, // jQuery預設會把data轉為query String, 所以要停用
	contentType : false,
    success:function(data){
    	console.log('上傳成功');
    },error : function(data) {
		alert(data.exception);
    }
});
});
</script>